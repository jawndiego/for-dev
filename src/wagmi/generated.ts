// Generated by @wagmi/cli@1.2.0 on 6/18/2023 at 7:12:23 PM
import {
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  Address,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
} from 'wagmi'
import {
  ReadContractResult,
  WriteContractMode,
  PrepareWriteContractResult,
} from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// mechaFutures
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export const mechaFuturesABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'customBaseURI_', internalType: 'string', type: 'string' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'approved',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_MULTIMINT',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_SUPPLY',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'PRICE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'count', internalType: 'uint256', type: 'uint256' }],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: 'salePrice', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'royaltyInfo',
    outputs: [
      { name: 'receiver', internalType: 'address', type: 'address' },
      { name: 'royaltyAmount', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'saleIsActive',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'customBaseURI_', internalType: 'string', type: 'string' },
    ],
    name: 'setBaseURI',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'saleIsActive_', internalType: 'bool', type: 'bool' }],
    name: 'setSaleIsActive',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'withdraw',
    outputs: [],
  },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export const mechaFuturesAddress = {
  1: '0x127eB7b87CBb33Ade80961eb026996109A936a35',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export const mechaFuturesConfig = {
  address: mechaFuturesAddress,
  abi: mechaFuturesABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// housePlants
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export const housePlantsABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'customBaseURI_', internalType: 'string', type: 'string' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'approved',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'count', internalType: 'uint256', type: 'uint256' }],
    name: 'GrowPlants',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'HousePlantsReserve',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_MULTIMINT',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_SUPPLY',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'PRICE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_to', internalType: 'address', type: 'address' },
      { name: '_reserveAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'reserveHousePlants',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'saleIsActive',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'customBaseURI_', internalType: 'string', type: 'string' },
    ],
    name: 'setBaseURI',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'saleIsActive_', internalType: 'bool', type: 'bool' }],
    name: 'setSaleIsActive',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'withdraw',
    outputs: [],
  },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export const housePlantsAddress = {
  1: '0x32887799bA0d479fa9495c4f1dd28178b37068e5',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export const housePlantsConfig = {
  address: housePlantsAddress,
  abi: housePlantsABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// zoraDrop
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export const zoraDropABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      {
        name: '_zoraERC721TransferHelper',
        internalType: 'address',
        type: 'address',
      },
      {
        name: '_factoryUpgradeGate',
        internalType: 'contract IFactoryUpgradeGate',
        type: 'address',
      },
      {
        name: '_marketFilterDAOAddress',
        internalType: 'address',
        type: 'address',
      },
      { name: '_mintFeeAmount', internalType: 'uint256', type: 'uint256' },
      {
        name: '_mintFeeRecipient',
        internalType: 'address payable',
        type: 'address',
      },
    ],
  },
  {
    type: 'error',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'Access_MissingRoleOrAdmin',
  },
  { type: 'error', inputs: [], name: 'Access_OnlyAdmin' },
  { type: 'error', inputs: [], name: 'Access_WithdrawNotAllowed' },
  {
    type: 'error',
    inputs: [
      { name: 'proposedAddress', internalType: 'address', type: 'address' },
    ],
    name: 'Admin_InvalidUpgradeAddress',
  },
  { type: 'error', inputs: [], name: 'Admin_UnableToFinalizeNotOpenEdition' },
  { type: 'error', inputs: [], name: 'ApprovalCallerNotOwnerNorApproved' },
  { type: 'error', inputs: [], name: 'ApprovalQueryForNonexistentToken' },
  { type: 'error', inputs: [], name: 'ApprovalToCurrentOwner' },
  { type: 'error', inputs: [], name: 'ApproveToCaller' },
  { type: 'error', inputs: [], name: 'BalanceQueryForZeroAddress' },
  { type: 'error', inputs: [], name: 'ExternalMetadataRenderer_CallFailed' },
  {
    type: 'error',
    inputs: [],
    name: 'MarketFilterDAOAddressNotSupportedForChain',
  },
  { type: 'error', inputs: [], name: 'MintFee_FundsSendFailure' },
  { type: 'error', inputs: [], name: 'MintToZeroAddress' },
  { type: 'error', inputs: [], name: 'MintZeroQuantity' },
  { type: 'error', inputs: [], name: 'Mint_SoldOut' },
  { type: 'error', inputs: [], name: 'ONLY_OWNER' },
  { type: 'error', inputs: [], name: 'ONLY_PENDING_OWNER' },
  {
    type: 'error',
    inputs: [{ name: 'operator', internalType: 'address', type: 'address' }],
    name: 'OperatorNotAllowed',
  },
  { type: 'error', inputs: [], name: 'OwnerQueryForNonexistentToken' },
  { type: 'error', inputs: [], name: 'Presale_Inactive' },
  { type: 'error', inputs: [], name: 'Presale_MerkleNotApproved' },
  { type: 'error', inputs: [], name: 'Presale_TooManyForAddress' },
  { type: 'error', inputs: [], name: 'Purchase_TooManyForAddress' },
  {
    type: 'error',
    inputs: [
      { name: 'correctPrice', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'Purchase_WrongPrice',
  },
  { type: 'error', inputs: [], name: 'RemoteOperatorFilterRegistryCallFailed' },
  { type: 'error', inputs: [], name: 'Sale_Inactive' },
  {
    type: 'error',
    inputs: [{ name: 'maxRoyaltyBPS', internalType: 'uint16', type: 'uint16' }],
    name: 'Setup_RoyaltyPercentageTooHigh',
  },
  { type: 'error', inputs: [], name: 'TransferCallerNotOwnerNorApproved' },
  { type: 'error', inputs: [], name: 'TransferFromIncorrectOwner' },
  { type: 'error', inputs: [], name: 'TransferToNonERC721ReceiverImplementer' },
  { type: 'error', inputs: [], name: 'TransferToZeroAddress' },
  { type: 'error', inputs: [], name: 'URIQueryForNonexistentToken' },
  { type: 'error', inputs: [], name: 'Withdraw_FundsSendFailure' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousAdmin',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newAdmin',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AdminChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'approved',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: '_fromTokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: '_toTokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'BatchMetadataUpdate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'beacon',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'BeaconUpgraded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'source',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'FundsReceived',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newAddress',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'changedBy',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'FundsRecipientChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'withdrawnBy',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'withdrawnTo',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'feeRecipient',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'feeAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'FundsWithdrawn',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: '_tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'MetadataUpdate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenContract',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'quantity',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'comment',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'MintComment',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'mintFeeAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'mintFeeRecipient',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      { name: 'success', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'MintFeePayout',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'numberOfMints',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'OpenMintFinalized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'potentialNewOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnerCanceled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'potentialNewOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnerPending',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'previousAdminRole',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
      {
        name: 'newAdminRole',
        internalType: 'bytes32',
        type: 'bytes32',
        indexed: true,
      },
    ],
    name: 'RoleAdminChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RoleGranted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'RoleRevoked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'quantity',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'pricePerToken',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'firstPurchasedTokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Sale',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'changedBy',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'SalesConfigChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Transfer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'renderer',
        internalType: 'contract IMetadataRenderer',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'UpdatedMetadataRenderer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MINTER_ROLE',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'SALES_MANAGER_ROLE',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'recipient', internalType: 'address', type: 'address' },
      { name: 'quantity', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'adminMint',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'recipients', internalType: 'address[]', type: 'address[]' },
    ],
    name: 'adminMintAirdrop',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'data', internalType: 'bytes', type: 'bytes' }],
    name: 'callMetadataRenderer',
    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'config',
    outputs: [
      {
        name: 'metadataRenderer',
        internalType: 'contract IMetadataRenderer',
        type: 'address',
      },
      { name: 'editionSize', internalType: 'uint64', type: 'uint64' },
      { name: 'royaltyBPS', internalType: 'uint16', type: 'uint16' },
      {
        name: 'fundsRecipient',
        internalType: 'address payable',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'contractURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'contractVersion',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'factoryUpgradeGate',
    outputs: [
      {
        name: '',
        internalType: 'contract IFactoryUpgradeGate',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'finalizeOpenEdition',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getRoleAdmin',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'grantRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'hasRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_contractName', internalType: 'string', type: 'string' },
      { name: '_contractSymbol', internalType: 'string', type: 'string' },
      { name: '_initialOwner', internalType: 'address', type: 'address' },
      {
        name: '_fundsRecipient',
        internalType: 'address payable',
        type: 'address',
      },
      { name: '_editionSize', internalType: 'uint64', type: 'uint64' },
      { name: '_royaltyBPS', internalType: 'uint16', type: 'uint16' },
      { name: '_setupCalls', internalType: 'bytes[]', type: 'bytes[]' },
      {
        name: '_metadataRenderer',
        internalType: 'contract IMetadataRenderer',
        type: 'address',
      },
      { name: '_metadataRendererInit', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'user', internalType: 'address', type: 'address' }],
    name: 'isAdmin',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'nftOwner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'enable', internalType: 'bool', type: 'bool' }],
    name: 'manageMarketFilterDAOSubscription',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'marketFilterDAOAddress',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'metadataRenderer',
    outputs: [
      { name: '', internalType: 'contract IMetadataRenderer', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'minter', internalType: 'address', type: 'address' }],
    name: 'mintedPerAddress',
    outputs: [
      {
        name: '',
        internalType: 'struct IERC721Drop.AddressMintDetails',
        type: 'tuple',
        components: [
          { name: 'totalMints', internalType: 'uint256', type: 'uint256' },
          { name: 'presaleMints', internalType: 'uint256', type: 'uint256' },
          { name: 'publicMints', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],
    name: 'multicall',
    outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'presaleMintsByAddress',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'proxiableUUID',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'quantity', internalType: 'uint256', type: 'uint256' }],
    name: 'purchase',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'quantity', internalType: 'uint256', type: 'uint256' },
      { name: 'maxQuantity', internalType: 'uint256', type: 'uint256' },
      { name: 'pricePerToken', internalType: 'uint256', type: 'uint256' },
      { name: 'merkleProof', internalType: 'bytes32[]', type: 'bytes32[]' },
    ],
    name: 'purchasePresale',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'quantity', internalType: 'uint256', type: 'uint256' },
      { name: 'maxQuantity', internalType: 'uint256', type: 'uint256' },
      { name: 'pricePerToken', internalType: 'uint256', type: 'uint256' },
      { name: 'merkleProof', internalType: 'bytes32[]', type: 'bytes32[]' },
      { name: 'comment', internalType: 'string', type: 'string' },
    ],
    name: 'purchasePresaleWithComment',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'quantity', internalType: 'uint256', type: 'uint256' },
      { name: 'comment', internalType: 'string', type: 'string' },
    ],
    name: 'purchaseWithComment',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'renounceRole',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'revokeRole',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '_salePrice', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'royaltyInfo',
    outputs: [
      { name: 'receiver', internalType: 'address', type: 'address' },
      { name: 'royaltyAmount', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'saleDetails',
    outputs: [
      {
        name: '',
        internalType: 'struct IERC721Drop.SaleDetails',
        type: 'tuple',
        components: [
          { name: 'publicSaleActive', internalType: 'bool', type: 'bool' },
          { name: 'presaleActive', internalType: 'bool', type: 'bool' },
          { name: 'publicSalePrice', internalType: 'uint256', type: 'uint256' },
          { name: 'publicSaleStart', internalType: 'uint64', type: 'uint64' },
          { name: 'publicSaleEnd', internalType: 'uint64', type: 'uint64' },
          { name: 'presaleStart', internalType: 'uint64', type: 'uint64' },
          { name: 'presaleEnd', internalType: 'uint64', type: 'uint64' },
          {
            name: 'presaleMerkleRoot',
            internalType: 'bytes32',
            type: 'bytes32',
          },
          {
            name: 'maxSalePurchasePerAddress',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'totalMinted', internalType: 'uint256', type: 'uint256' },
          { name: 'maxSupply', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'salesConfig',
    outputs: [
      { name: 'publicSalePrice', internalType: 'uint104', type: 'uint104' },
      {
        name: 'maxSalePurchasePerAddress',
        internalType: 'uint32',
        type: 'uint32',
      },
      { name: 'publicSaleStart', internalType: 'uint64', type: 'uint64' },
      { name: 'publicSaleEnd', internalType: 'uint64', type: 'uint64' },
      { name: 'presaleStart', internalType: 'uint64', type: 'uint64' },
      { name: 'presaleEnd', internalType: 'uint64', type: 'uint64' },
      { name: 'presaleMerkleRoot', internalType: 'bytes32', type: 'bytes32' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'newRecipientAddress',
        internalType: 'address payable',
        type: 'address',
      },
    ],
    name: 'setFundsRecipient',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'newRenderer',
        internalType: 'contract IMetadataRenderer',
        type: 'address',
      },
      { name: 'setupRenderer', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'setMetadataRenderer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'publicSalePrice', internalType: 'uint104', type: 'uint104' },
      {
        name: 'maxSalePurchasePerAddress',
        internalType: 'uint32',
        type: 'uint32',
      },
      { name: 'publicSaleStart', internalType: 'uint64', type: 'uint64' },
      { name: 'publicSaleEnd', internalType: 'uint64', type: 'uint64' },
      { name: 'presaleStart', internalType: 'uint64', type: 'uint64' },
      { name: 'presaleEnd', internalType: 'uint64', type: 'uint64' },
      { name: 'presaleMerkleRoot', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'setSaleConfiguration',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'args', internalType: 'bytes', type: 'bytes' }],
    name: 'updateMarketFilterSettings',
    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'withdraw',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'zoraERC721TransferHelper',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'quantity', internalType: 'uint256', type: 'uint256' }],
    name: 'zoraFeeForAmount',
    outputs: [
      { name: 'recipient', internalType: 'address payable', type: 'address' },
      { name: 'fee', internalType: 'uint256', type: 'uint256' },
    ],
  },
  { stateMutability: 'payable', type: 'receive' },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export const zoraDropAddress = {
  1: '0x419074d73Cf0852e46b8531b430B1230C348C291',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export const zoraDropConfig = {
  address: zoraDropAddress,
  abi: zoraDropABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"MAX_MULTIMINT"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesMaxMultimint<
  TFunctionName extends 'MAX_MULTIMINT',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'MAX_MULTIMINT',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"MAX_SUPPLY"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesMaxSupply<
  TFunctionName extends 'MAX_SUPPLY',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'MAX_SUPPLY',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"PRICE"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesPrice<
  TFunctionName extends 'PRICE',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'PRICE',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesBalanceOf<
  TFunctionName extends 'balanceOf',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"getApproved"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesGetApproved<
  TFunctionName extends 'getApproved',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesIsApprovedForAll<
  TFunctionName extends 'isApprovedForAll',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesName<
  TFunctionName extends 'name',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesOwner<
  TFunctionName extends 'owner',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"ownerOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesOwnerOf<
  TFunctionName extends 'ownerOf',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"royaltyInfo"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesRoyaltyInfo<
  TFunctionName extends 'royaltyInfo',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'royaltyInfo',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"saleIsActive"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesSaleIsActive<
  TFunctionName extends 'saleIsActive',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'saleIsActive',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesSupportsInterface<
  TFunctionName extends 'supportsInterface',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesSymbol<
  TFunctionName extends 'symbol',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"tokenURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesTokenUri<
  TFunctionName extends 'tokenURI',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"totalSupply"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesTotalSupply<
  TFunctionName extends 'totalSupply',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          string
        >['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<typeof mechaFuturesABI, TFunctionName, TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, TFunctionName, TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesApprove<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'approve'
        >['request']['abi'],
        'approve',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<typeof mechaFuturesABI, 'approve', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'approve', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"mint"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesMint<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'mint'
        >['request']['abi'],
        'mint',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'mint' }
    : UseContractWriteConfig<typeof mechaFuturesABI, 'mint', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'mint', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesRenounceOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'renounceOwnership'
        >['request']['abi'],
        'renounceOwnership',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<
        typeof mechaFuturesABI,
        'renounceOwnership',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'renounceOwnership', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesSafeTransferFrom<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'safeTransferFrom'
        >['request']['abi'],
        'safeTransferFrom',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      }
    : UseContractWriteConfig<
        typeof mechaFuturesABI,
        'safeTransferFrom',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'safeTransferFrom', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesSetApprovalForAll<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'setApprovalForAll'
        >['request']['abi'],
        'setApprovalForAll',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      }
    : UseContractWriteConfig<
        typeof mechaFuturesABI,
        'setApprovalForAll',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'setApprovalForAll', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"setBaseURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesSetBaseUri<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'setBaseURI'
        >['request']['abi'],
        'setBaseURI',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setBaseURI' }
    : UseContractWriteConfig<typeof mechaFuturesABI, 'setBaseURI', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setBaseURI'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'setBaseURI', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'setBaseURI',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"setSaleIsActive"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesSetSaleIsActive<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'setSaleIsActive'
        >['request']['abi'],
        'setSaleIsActive',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setSaleIsActive'
      }
    : UseContractWriteConfig<
        typeof mechaFuturesABI,
        'setSaleIsActive',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSaleIsActive'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'setSaleIsActive', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'setSaleIsActive',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesTransferFrom<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'transferFrom'
        >['request']['abi'],
        'transferFrom',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferFrom'
      }
    : UseContractWriteConfig<typeof mechaFuturesABI, 'transferFrom', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'transferFrom', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesTransferOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'transferOwnership'
        >['request']['abi'],
        'transferOwnership',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<
        typeof mechaFuturesABI,
        'transferOwnership',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'transferOwnership', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesWithdraw<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'withdraw'
        >['request']['abi'],
        'withdraw',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'withdraw' }
    : UseContractWriteConfig<typeof mechaFuturesABI, 'withdraw', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'withdraw'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'withdraw', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    ...config,
  } as UsePrepareContractWriteConfig<typeof mechaFuturesABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'approve'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"mint"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'mint'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'mint'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'renounceOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof mechaFuturesABI,
    'renounceOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'safeTransferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof mechaFuturesABI,
    'safeTransferFrom'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'setApprovalForAll'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof mechaFuturesABI,
    'setApprovalForAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"setBaseURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesSetBaseUri(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'setBaseURI'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'setBaseURI',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'setBaseURI'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"setSaleIsActive"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesSetSaleIsActive(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'setSaleIsActive'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'setSaleIsActive',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'setSaleIsActive'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'transferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'transferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'transferOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof mechaFuturesABI,
    'transferOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesWithdraw(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'withdraw'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'withdraw'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mechaFuturesABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof mechaFuturesABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractEvent({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    ...config,
  } as UseContractEventConfig<typeof mechaFuturesABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mechaFuturesABI}__ and `eventName` set to `"Approval"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof mechaFuturesABI, 'Approval'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractEvent({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof mechaFuturesABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mechaFuturesABI}__ and `eventName` set to `"ApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<typeof mechaFuturesABI, 'ApprovalForAll'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractEvent({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<typeof mechaFuturesABI, 'ApprovalForAll'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mechaFuturesABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof mechaFuturesABI, 'OwnershipTransferred'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractEvent({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof mechaFuturesABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mechaFuturesABI}__ and `eventName` set to `"Transfer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof mechaFuturesABI, 'Transfer'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractEvent({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof mechaFuturesABI, 'Transfer'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"HousePlantsReserve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsHousePlantsReserve<
  TFunctionName extends 'HousePlantsReserve',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'HousePlantsReserve',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"MAX_MULTIMINT"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsMaxMultimint<
  TFunctionName extends 'MAX_MULTIMINT',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'MAX_MULTIMINT',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"MAX_SUPPLY"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsMaxSupply<
  TFunctionName extends 'MAX_SUPPLY',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'MAX_SUPPLY',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"PRICE"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsPrice<
  TFunctionName extends 'PRICE',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'PRICE',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsBalanceOf<
  TFunctionName extends 'balanceOf',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"getApproved"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsGetApproved<
  TFunctionName extends 'getApproved',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsIsApprovedForAll<
  TFunctionName extends 'isApprovedForAll',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsName<
  TFunctionName extends 'name',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsOwner<
  TFunctionName extends 'owner',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"ownerOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsOwnerOf<
  TFunctionName extends 'ownerOf',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"saleIsActive"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsSaleIsActive<
  TFunctionName extends 'saleIsActive',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'saleIsActive',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsSupportsInterface<
  TFunctionName extends 'supportsInterface',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsSymbol<
  TFunctionName extends 'symbol',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"tokenByIndex"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsTokenByIndex<
  TFunctionName extends 'tokenByIndex',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'tokenByIndex',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"tokenOfOwnerByIndex"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsTokenOfOwnerByIndex<
  TFunctionName extends 'tokenOfOwnerByIndex',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'tokenOfOwnerByIndex',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"tokenURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsTokenUri<
  TFunctionName extends 'tokenURI',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"totalSupply"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsTotalSupply<
  TFunctionName extends 'totalSupply',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          string
        >['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<typeof housePlantsABI, TFunctionName, TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, TFunctionName, TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"GrowPlants"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsGrowPlants<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'GrowPlants'
        >['request']['abi'],
        'GrowPlants',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'GrowPlants' }
    : UseContractWriteConfig<typeof housePlantsABI, 'GrowPlants', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'GrowPlants'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'GrowPlants', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'GrowPlants',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsApprove<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'approve'
        >['request']['abi'],
        'approve',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<typeof housePlantsABI, 'approve', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'approve', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsRenounceOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'renounceOwnership'
        >['request']['abi'],
        'renounceOwnership',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<
        typeof housePlantsABI,
        'renounceOwnership',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'renounceOwnership', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"reserveHousePlants"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsReserveHousePlants<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'reserveHousePlants'
        >['request']['abi'],
        'reserveHousePlants',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'reserveHousePlants'
      }
    : UseContractWriteConfig<
        typeof housePlantsABI,
        'reserveHousePlants',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'reserveHousePlants'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'reserveHousePlants', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'reserveHousePlants',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsSafeTransferFrom<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'safeTransferFrom'
        >['request']['abi'],
        'safeTransferFrom',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      }
    : UseContractWriteConfig<
        typeof housePlantsABI,
        'safeTransferFrom',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'safeTransferFrom', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsSetApprovalForAll<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'setApprovalForAll'
        >['request']['abi'],
        'setApprovalForAll',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      }
    : UseContractWriteConfig<
        typeof housePlantsABI,
        'setApprovalForAll',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'setApprovalForAll', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"setBaseURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsSetBaseUri<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'setBaseURI'
        >['request']['abi'],
        'setBaseURI',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setBaseURI' }
    : UseContractWriteConfig<typeof housePlantsABI, 'setBaseURI', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setBaseURI'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'setBaseURI', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'setBaseURI',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"setSaleIsActive"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsSetSaleIsActive<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'setSaleIsActive'
        >['request']['abi'],
        'setSaleIsActive',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setSaleIsActive'
      }
    : UseContractWriteConfig<
        typeof housePlantsABI,
        'setSaleIsActive',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSaleIsActive'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'setSaleIsActive', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'setSaleIsActive',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsTransferFrom<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'transferFrom'
        >['request']['abi'],
        'transferFrom',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferFrom'
      }
    : UseContractWriteConfig<typeof housePlantsABI, 'transferFrom', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'transferFrom', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsTransferOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'transferOwnership'
        >['request']['abi'],
        'transferOwnership',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<
        typeof housePlantsABI,
        'transferOwnership',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'transferOwnership', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsWithdraw<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'withdraw'
        >['request']['abi'],
        'withdraw',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'withdraw' }
    : UseContractWriteConfig<typeof housePlantsABI, 'withdraw', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'withdraw'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'withdraw', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    ...config,
  } as UsePrepareContractWriteConfig<typeof housePlantsABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"GrowPlants"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsGrowPlants(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'GrowPlants'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'GrowPlants',
    ...config,
  } as UsePrepareContractWriteConfig<typeof housePlantsABI, 'GrowPlants'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'approve'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof housePlantsABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'renounceOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof housePlantsABI,
    'renounceOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"reserveHousePlants"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsReserveHousePlants(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'reserveHousePlants'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'reserveHousePlants',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof housePlantsABI,
    'reserveHousePlants'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'safeTransferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof housePlantsABI, 'safeTransferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'setApprovalForAll'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof housePlantsABI,
    'setApprovalForAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"setBaseURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsSetBaseUri(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'setBaseURI'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'setBaseURI',
    ...config,
  } as UsePrepareContractWriteConfig<typeof housePlantsABI, 'setBaseURI'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"setSaleIsActive"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsSetSaleIsActive(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'setSaleIsActive'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'setSaleIsActive',
    ...config,
  } as UsePrepareContractWriteConfig<typeof housePlantsABI, 'setSaleIsActive'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'transferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof housePlantsABI, 'transferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'transferOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof housePlantsABI,
    'transferOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsWithdraw(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'withdraw'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<typeof housePlantsABI, 'withdraw'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link housePlantsABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof housePlantsABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractEvent({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    ...config,
  } as UseContractEventConfig<typeof housePlantsABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link housePlantsABI}__ and `eventName` set to `"Approval"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof housePlantsABI, 'Approval'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractEvent({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof housePlantsABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link housePlantsABI}__ and `eventName` set to `"ApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<typeof housePlantsABI, 'ApprovalForAll'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractEvent({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<typeof housePlantsABI, 'ApprovalForAll'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link housePlantsABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof housePlantsABI, 'OwnershipTransferred'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractEvent({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof housePlantsABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link housePlantsABI}__ and `eventName` set to `"Transfer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof housePlantsABI, 'Transfer'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractEvent({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof housePlantsABI, 'Transfer'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"DEFAULT_ADMIN_ROLE"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropDefaultAdminRole<
  TFunctionName extends 'DEFAULT_ADMIN_ROLE',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'DEFAULT_ADMIN_ROLE',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"MINTER_ROLE"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropMinterRole<
  TFunctionName extends 'MINTER_ROLE',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'MINTER_ROLE',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"SALES_MANAGER_ROLE"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropSalesManagerRole<
  TFunctionName extends 'SALES_MANAGER_ROLE',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'SALES_MANAGER_ROLE',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropBalanceOf<
  TFunctionName extends 'balanceOf',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"config"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropConfig<
  TFunctionName extends 'config',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'config',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"contractURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropContractUri<
  TFunctionName extends 'contractURI',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'contractURI',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"contractVersion"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropContractVersion<
  TFunctionName extends 'contractVersion',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'contractVersion',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"factoryUpgradeGate"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropFactoryUpgradeGate<
  TFunctionName extends 'factoryUpgradeGate',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'factoryUpgradeGate',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"getApproved"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropGetApproved<
  TFunctionName extends 'getApproved',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"getRoleAdmin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropGetRoleAdmin<
  TFunctionName extends 'getRoleAdmin',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'getRoleAdmin',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"hasRole"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropHasRole<
  TFunctionName extends 'hasRole',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'hasRole',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"isAdmin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropIsAdmin<
  TFunctionName extends 'isAdmin',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'isAdmin',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropIsApprovedForAll<
  TFunctionName extends 'isApprovedForAll',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"marketFilterDAOAddress"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropMarketFilterDaoAddress<
  TFunctionName extends 'marketFilterDAOAddress',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'marketFilterDAOAddress',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"metadataRenderer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropMetadataRenderer<
  TFunctionName extends 'metadataRenderer',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'metadataRenderer',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"mintedPerAddress"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropMintedPerAddress<
  TFunctionName extends 'mintedPerAddress',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'mintedPerAddress',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropName<
  TFunctionName extends 'name',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropOwner<
  TFunctionName extends 'owner',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"ownerOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropOwnerOf<
  TFunctionName extends 'ownerOf',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"presaleMintsByAddress"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropPresaleMintsByAddress<
  TFunctionName extends 'presaleMintsByAddress',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'presaleMintsByAddress',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"proxiableUUID"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropProxiableUuid<
  TFunctionName extends 'proxiableUUID',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'proxiableUUID',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"royaltyInfo"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropRoyaltyInfo<
  TFunctionName extends 'royaltyInfo',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'royaltyInfo',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"saleDetails"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropSaleDetails<
  TFunctionName extends 'saleDetails',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'saleDetails',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"salesConfig"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropSalesConfig<
  TFunctionName extends 'salesConfig',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'salesConfig',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropSupportsInterface<
  TFunctionName extends 'supportsInterface',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropSymbol<
  TFunctionName extends 'symbol',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"tokenURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropTokenUri<
  TFunctionName extends 'tokenURI',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"totalSupply"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropTotalSupply<
  TFunctionName extends 'totalSupply',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"zoraERC721TransferHelper"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropZoraErc721TransferHelper<
  TFunctionName extends 'zoraERC721TransferHelper',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'zoraERC721TransferHelper',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"zoraFeeForAmount"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropZoraFeeForAmount<
  TFunctionName extends 'zoraFeeForAmount',
  TSelectData = ReadContractResult<typeof zoraDropABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractRead({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'zoraFeeForAmount',
    ...config,
  } as UseContractReadConfig<typeof zoraDropABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          string
        >['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<typeof zoraDropABI, TFunctionName, TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, TFunctionName, TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"adminMint"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropAdminMint<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'adminMint'
        >['request']['abi'],
        'adminMint',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'adminMint' }
    : UseContractWriteConfig<typeof zoraDropABI, 'adminMint', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'adminMint'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'adminMint', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'adminMint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"adminMintAirdrop"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropAdminMintAirdrop<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'adminMintAirdrop'
        >['request']['abi'],
        'adminMintAirdrop',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'adminMintAirdrop'
      }
    : UseContractWriteConfig<typeof zoraDropABI, 'adminMintAirdrop', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'adminMintAirdrop'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'adminMintAirdrop', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'adminMintAirdrop',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropApprove<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'approve'
        >['request']['abi'],
        'approve',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<typeof zoraDropABI, 'approve', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'approve', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"burn"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropBurn<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'burn'
        >['request']['abi'],
        'burn',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'burn' }
    : UseContractWriteConfig<typeof zoraDropABI, 'burn', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'burn', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"callMetadataRenderer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropCallMetadataRenderer<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'callMetadataRenderer'
        >['request']['abi'],
        'callMetadataRenderer',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'callMetadataRenderer'
      }
    : UseContractWriteConfig<
        typeof zoraDropABI,
        'callMetadataRenderer',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'callMetadataRenderer'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'callMetadataRenderer', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'callMetadataRenderer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"finalizeOpenEdition"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropFinalizeOpenEdition<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'finalizeOpenEdition'
        >['request']['abi'],
        'finalizeOpenEdition',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'finalizeOpenEdition'
      }
    : UseContractWriteConfig<
        typeof zoraDropABI,
        'finalizeOpenEdition',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'finalizeOpenEdition'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'finalizeOpenEdition', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'finalizeOpenEdition',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"grantRole"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropGrantRole<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'grantRole'
        >['request']['abi'],
        'grantRole',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'grantRole' }
    : UseContractWriteConfig<typeof zoraDropABI, 'grantRole', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'grantRole'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'grantRole', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'grantRole',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"initialize"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropInitialize<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'initialize'
        >['request']['abi'],
        'initialize',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'initialize' }
    : UseContractWriteConfig<typeof zoraDropABI, 'initialize', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'initialize', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"manageMarketFilterDAOSubscription"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropManageMarketFilterDaoSubscription<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'manageMarketFilterDAOSubscription'
        >['request']['abi'],
        'manageMarketFilterDAOSubscription',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'manageMarketFilterDAOSubscription'
      }
    : UseContractWriteConfig<
        typeof zoraDropABI,
        'manageMarketFilterDAOSubscription',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'manageMarketFilterDAOSubscription'
      } = {} as any,
) {
  return useContractWrite<
    typeof zoraDropABI,
    'manageMarketFilterDAOSubscription',
    TMode
  >({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'manageMarketFilterDAOSubscription',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"multicall"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropMulticall<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'multicall'
        >['request']['abi'],
        'multicall',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'multicall' }
    : UseContractWriteConfig<typeof zoraDropABI, 'multicall', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'multicall'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'multicall', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'multicall',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"purchase"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropPurchase<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'purchase'
        >['request']['abi'],
        'purchase',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'purchase' }
    : UseContractWriteConfig<typeof zoraDropABI, 'purchase', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'purchase'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'purchase', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'purchase',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"purchasePresale"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropPurchasePresale<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'purchasePresale'
        >['request']['abi'],
        'purchasePresale',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'purchasePresale'
      }
    : UseContractWriteConfig<typeof zoraDropABI, 'purchasePresale', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'purchasePresale'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'purchasePresale', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'purchasePresale',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"purchasePresaleWithComment"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropPurchasePresaleWithComment<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'purchasePresaleWithComment'
        >['request']['abi'],
        'purchasePresaleWithComment',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'purchasePresaleWithComment'
      }
    : UseContractWriteConfig<
        typeof zoraDropABI,
        'purchasePresaleWithComment',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'purchasePresaleWithComment'
      } = {} as any,
) {
  return useContractWrite<
    typeof zoraDropABI,
    'purchasePresaleWithComment',
    TMode
  >({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'purchasePresaleWithComment',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"purchaseWithComment"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropPurchaseWithComment<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'purchaseWithComment'
        >['request']['abi'],
        'purchaseWithComment',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'purchaseWithComment'
      }
    : UseContractWriteConfig<
        typeof zoraDropABI,
        'purchaseWithComment',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'purchaseWithComment'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'purchaseWithComment', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'purchaseWithComment',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"renounceRole"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropRenounceRole<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'renounceRole'
        >['request']['abi'],
        'renounceRole',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceRole'
      }
    : UseContractWriteConfig<typeof zoraDropABI, 'renounceRole', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceRole'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'renounceRole', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'renounceRole',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"revokeRole"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropRevokeRole<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'revokeRole'
        >['request']['abi'],
        'revokeRole',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'revokeRole' }
    : UseContractWriteConfig<typeof zoraDropABI, 'revokeRole', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'revokeRole'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'revokeRole', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'revokeRole',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropSafeTransferFrom<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'safeTransferFrom'
        >['request']['abi'],
        'safeTransferFrom',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      }
    : UseContractWriteConfig<typeof zoraDropABI, 'safeTransferFrom', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'safeTransferFrom', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropSetApprovalForAll<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'setApprovalForAll'
        >['request']['abi'],
        'setApprovalForAll',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      }
    : UseContractWriteConfig<typeof zoraDropABI, 'setApprovalForAll', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'setApprovalForAll', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"setFundsRecipient"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropSetFundsRecipient<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'setFundsRecipient'
        >['request']['abi'],
        'setFundsRecipient',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setFundsRecipient'
      }
    : UseContractWriteConfig<typeof zoraDropABI, 'setFundsRecipient', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setFundsRecipient'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'setFundsRecipient', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'setFundsRecipient',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"setMetadataRenderer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropSetMetadataRenderer<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'setMetadataRenderer'
        >['request']['abi'],
        'setMetadataRenderer',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setMetadataRenderer'
      }
    : UseContractWriteConfig<
        typeof zoraDropABI,
        'setMetadataRenderer',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setMetadataRenderer'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'setMetadataRenderer', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'setMetadataRenderer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"setOwner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropSetOwner<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'setOwner'
        >['request']['abi'],
        'setOwner',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setOwner' }
    : UseContractWriteConfig<typeof zoraDropABI, 'setOwner', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setOwner'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'setOwner', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'setOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"setSaleConfiguration"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropSetSaleConfiguration<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'setSaleConfiguration'
        >['request']['abi'],
        'setSaleConfiguration',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setSaleConfiguration'
      }
    : UseContractWriteConfig<
        typeof zoraDropABI,
        'setSaleConfiguration',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSaleConfiguration'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'setSaleConfiguration', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'setSaleConfiguration',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropTransferFrom<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'transferFrom'
        >['request']['abi'],
        'transferFrom',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferFrom'
      }
    : UseContractWriteConfig<typeof zoraDropABI, 'transferFrom', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'transferFrom', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"updateMarketFilterSettings"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropUpdateMarketFilterSettings<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'updateMarketFilterSettings'
        >['request']['abi'],
        'updateMarketFilterSettings',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'updateMarketFilterSettings'
      }
    : UseContractWriteConfig<
        typeof zoraDropABI,
        'updateMarketFilterSettings',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'updateMarketFilterSettings'
      } = {} as any,
) {
  return useContractWrite<
    typeof zoraDropABI,
    'updateMarketFilterSettings',
    TMode
  >({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'updateMarketFilterSettings',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"upgradeTo"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropUpgradeTo<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'upgradeTo'
        >['request']['abi'],
        'upgradeTo',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'upgradeTo' }
    : UseContractWriteConfig<typeof zoraDropABI, 'upgradeTo', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'upgradeTo', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"upgradeToAndCall"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropUpgradeToAndCall<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'upgradeToAndCall'
        >['request']['abi'],
        'upgradeToAndCall',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'upgradeToAndCall'
      }
    : UseContractWriteConfig<typeof zoraDropABI, 'upgradeToAndCall', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'upgradeToAndCall'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'upgradeToAndCall', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'upgradeToAndCall',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropWithdraw<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraDropAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraDropABI,
          'withdraw'
        >['request']['abi'],
        'withdraw',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'withdraw' }
    : UseContractWriteConfig<typeof zoraDropABI, 'withdraw', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'withdraw'
      } = {} as any,
) {
  return useContractWrite<typeof zoraDropABI, 'withdraw', TMode>({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"adminMint"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropAdminMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'adminMint'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'adminMint',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'adminMint'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"adminMintAirdrop"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropAdminMintAirdrop(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'adminMintAirdrop'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'adminMintAirdrop',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'adminMintAirdrop'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'approve'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"burn"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropBurn(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'burn'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'burn'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"callMetadataRenderer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropCallMetadataRenderer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'callMetadataRenderer'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'callMetadataRenderer',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof zoraDropABI,
    'callMetadataRenderer'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"finalizeOpenEdition"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropFinalizeOpenEdition(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'finalizeOpenEdition'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'finalizeOpenEdition',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'finalizeOpenEdition'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"grantRole"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropGrantRole(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'grantRole'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'grantRole',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'grantRole'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"initialize"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'initialize'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'initialize'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"manageMarketFilterDAOSubscription"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropManageMarketFilterDaoSubscription(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof zoraDropABI,
      'manageMarketFilterDAOSubscription'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'manageMarketFilterDAOSubscription',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof zoraDropABI,
    'manageMarketFilterDAOSubscription'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"multicall"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropMulticall(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'multicall'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'multicall',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'multicall'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"purchase"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropPurchase(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'purchase'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'purchase',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'purchase'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"purchasePresale"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropPurchasePresale(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'purchasePresale'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'purchasePresale',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'purchasePresale'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"purchasePresaleWithComment"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropPurchasePresaleWithComment(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof zoraDropABI,
      'purchasePresaleWithComment'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'purchasePresaleWithComment',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof zoraDropABI,
    'purchasePresaleWithComment'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"purchaseWithComment"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropPurchaseWithComment(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'purchaseWithComment'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'purchaseWithComment',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'purchaseWithComment'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"renounceRole"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropRenounceRole(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'renounceRole'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'renounceRole',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'renounceRole'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"revokeRole"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropRevokeRole(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'revokeRole'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'revokeRole',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'revokeRole'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'safeTransferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'safeTransferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'setApprovalForAll'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'setApprovalForAll'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"setFundsRecipient"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropSetFundsRecipient(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'setFundsRecipient'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'setFundsRecipient',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'setFundsRecipient'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"setMetadataRenderer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropSetMetadataRenderer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'setMetadataRenderer'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'setMetadataRenderer',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'setMetadataRenderer'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"setOwner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropSetOwner(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'setOwner'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'setOwner',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'setOwner'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"setSaleConfiguration"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropSetSaleConfiguration(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'setSaleConfiguration'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'setSaleConfiguration',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof zoraDropABI,
    'setSaleConfiguration'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'transferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'transferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"updateMarketFilterSettings"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropUpdateMarketFilterSettings(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof zoraDropABI,
      'updateMarketFilterSettings'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'updateMarketFilterSettings',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof zoraDropABI,
    'updateMarketFilterSettings'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"upgradeTo"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'upgradeTo'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'upgradeTo'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"upgradeToAndCall"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropUpgradeToAndCall(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'upgradeToAndCall'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'upgradeToAndCall',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'upgradeToAndCall'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraDropABI}__ and `functionName` set to `"withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function usePrepareZoraDropWithdraw(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraDropABI, 'withdraw'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraDropABI, 'withdraw'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"AdminChanged"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropAdminChangedEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'AdminChanged'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'AdminChanged',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'AdminChanged'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"Approval"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'Approval'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"ApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'ApprovalForAll'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'ApprovalForAll'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"BatchMetadataUpdate"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropBatchMetadataUpdateEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'BatchMetadataUpdate'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'BatchMetadataUpdate',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'BatchMetadataUpdate'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"BeaconUpgraded"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropBeaconUpgradedEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'BeaconUpgraded'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'BeaconUpgraded',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'BeaconUpgraded'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"FundsReceived"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropFundsReceivedEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'FundsReceived'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'FundsReceived',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'FundsReceived'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"FundsRecipientChanged"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropFundsRecipientChangedEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'FundsRecipientChanged'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'FundsRecipientChanged',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'FundsRecipientChanged'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"FundsWithdrawn"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropFundsWithdrawnEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'FundsWithdrawn'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'FundsWithdrawn',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'FundsWithdrawn'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"MetadataUpdate"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropMetadataUpdateEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'MetadataUpdate'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'MetadataUpdate',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'MetadataUpdate'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"MintComment"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropMintCommentEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'MintComment'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'MintComment',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'MintComment'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"MintFeePayout"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropMintFeePayoutEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'MintFeePayout'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'MintFeePayout',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'MintFeePayout'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"OpenMintFinalized"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropOpenMintFinalizedEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'OpenMintFinalized'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'OpenMintFinalized',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'OpenMintFinalized'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"OwnerCanceled"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropOwnerCanceledEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'OwnerCanceled'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'OwnerCanceled',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'OwnerCanceled'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"OwnerPending"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropOwnerPendingEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'OwnerPending'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'OwnerPending',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'OwnerPending'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'OwnershipTransferred'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"RoleAdminChanged"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropRoleAdminChangedEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'RoleAdminChanged'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'RoleAdminChanged',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'RoleAdminChanged'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"RoleGranted"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropRoleGrantedEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'RoleGranted'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'RoleGranted',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'RoleGranted'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"RoleRevoked"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropRoleRevokedEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'RoleRevoked'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'RoleRevoked',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'RoleRevoked'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"Sale"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropSaleEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'Sale'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'Sale',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'Sale'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"SalesConfigChanged"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropSalesConfigChangedEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'SalesConfigChanged'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'SalesConfigChanged',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'SalesConfigChanged'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"Transfer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'Transfer'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'Transfer'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"UpdatedMetadataRenderer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropUpdatedMetadataRendererEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'UpdatedMetadataRenderer'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'UpdatedMetadataRenderer',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'UpdatedMetadataRenderer'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraDropABI}__ and `eventName` set to `"Upgraded"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x419074d73cf0852e46b8531b430b1230c348c291)
 */
export function useZoraDropUpgradedEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraDropABI, 'Upgraded'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraDropAddress } = {} as any,
) {
  return useContractEvent({
    abi: zoraDropABI,
    address: zoraDropAddress[1],
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<typeof zoraDropABI, 'Upgraded'>)
}
